name: Render Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - LICENSE

jobs:
  trigger-render-deploys:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trigger Web deploy (Render API)
        if: ${{ secrets.RENDER_API_KEY != '' && secrets.RENDER_WEB_SERVICE_ID != '' }}
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_WEB_SERVICE_ID }}
        run: |
          curl -sS -X POST \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${SERVICE_ID}/deploys \
            -d '{"clearCache":false}' | jq .

      - name: Trigger Worker deploy (Render API)
        if: ${{ secrets.RENDER_API_KEY != '' && secrets.RENDER_WORKER_SERVICE_ID != '' }}
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_WORKER_SERVICE_ID }}
        run: |
          curl -sS -X POST \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            https://api.render.com/v1/services/${SERVICE_ID}/deploys \
            -d '{"clearCache":false}' | jq .

      - name: Wait a bit for services to settle
        run: sleep 45

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4.4"
          bundler-cache: true
        env:
          BUNDLE_WITHOUT: "development:test"

      - name: Install system dependencies for pg gem
        run: sudo apt-get update -y && sudo apt-get install -y libpq-dev build-essential

      - name: Bundle install (production groups only)
        working-directory: apps/documind/api
        env:
          BUNDLE_WITHOUT: "development:test"
        run: bundle install --jobs 4 --retry 3

      - name: Run database migrations (free plan workaround)
        if: ${{ secrets.RENDER_PG_URL != '' && secrets.RAILS_MASTER_KEY != '' }}
        working-directory: apps/documind/api
        env:
          RAILS_ENV: production
          DATABASE_URL: ${{ secrets.RENDER_PG_URL }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: bundle exec rails db:migrate
