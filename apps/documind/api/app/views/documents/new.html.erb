<div class="max-w-7xl mx-auto">
  <div class="px-4 py-6 sm:px-0">
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Upload Document</h1>
      <p class="mt-2 text-sm text-gray-600 dark:text-gray-300">
        Upload a PDF or TXT document to analyze with AI
      </p>
    </div>

    <div class="max-w-2xl">
      <!-- Traditional Form for Upload -->
      <%= form_with url: documents_path, local: true, class: "space-y-6", multipart: true do |form| %>
        <!-- Drag and Drop Area -->
        <div class="border-2 border-dashed border-gray-300 rounded-lg p-12 text-center hover:border-gray-400 transition-colors duration-200">
          <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
          </svg>
          <div class="mt-4">
            <label for="file-upload" class="cursor-pointer">
              <span class="mt-2 block text-sm font-medium text-gray-900">
                <span class="text-blue-600 hover:text-blue-500">Upload a file</span>
                <span class="text-gray-500"> or drag and drop</span>
              </span>
              <span class="mt-1 block text-xs text-gray-500">
                PDF or TXT up to 10MB
              </span>
            </label>
            <%= form.file_field :file,
                accept: ".pdf,.txt",
                class: "sr-only",
                id: "file-upload",
                required: true %>
          </div>
        </div>

        <!-- File Preview -->
        <div id="file-preview" class="hidden">
          <div class="flex items-center p-4 bg-gray-50 rounded-lg">
            <svg class="w-8 h-8 text-red-500 mr-3" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4z" clip-rule="evenodd" />
            </svg>
            <div>
              <p class="text-sm font-medium text-gray-900" id="file-name"></p>
              <p class="text-sm text-gray-500" id="file-size"></p>
            </div>
          </div>
        </div>

        <!-- Upload Button -->
        <div class="flex justify-end">
          <%= form.submit "Upload Document",
              class: "bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200",
              id: "upload-button",
              disabled: true %>
        </div>
      <% end %>

      <!-- Instructions -->
      <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 class="text-lg font-medium text-blue-900 mb-2">What happens next?</h3>
        <ul class="text-sm text-blue-800 space-y-2">
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            Document is uploaded and processed in the background
          </li>
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            Text is extracted and split into chunks for analysis
          </li>
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            AI embeddings are generated for semantic search
          </li>
          <li class="flex items-start">
            <svg class="w-5 h-5 text-blue-600 mr-2 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            You can then ask questions and get AI-powered insights
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const fileInput = document.getElementById('file-upload');
  const filePreview = document.getElementById('file-preview');
  const fileName = document.getElementById('file-name');
  const fileSize = document.getElementById('file-size');
  const uploadButton = document.getElementById('upload-button');

  fileInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      // Show file preview
      fileName.textContent = file.name;
      fileSize.textContent = (file.size / 1024 / 1024).toFixed(2) + ' MB';
      filePreview.classList.remove('hidden');
      uploadButton.disabled = false;
    } else {
      filePreview.classList.add('hidden');
      uploadButton.disabled = true;
    }
  });

  // Drag and drop functionality
  const dropArea = document.querySelector('.border-dashed');

  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, preventDefaults, false);
  });

  function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
  }

  ['dragenter', 'dragover'].forEach(eventName => {
    dropArea.addEventListener(eventName, highlight, false);
  });

  ['dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, unhighlight, false);
  });

  function highlight(e) {
    dropArea.classList.add('border-blue-500', 'bg-blue-50');
  }

  function unhighlight(e) {
    dropArea.classList.remove('border-blue-500', 'bg-blue-50');
  }

  dropArea.addEventListener('drop', handleDrop, false);

  function handleDrop(e) {
    const dt = e.dataTransfer;
    const files = dt.files;

    if (files.length > 0) {
      fileInput.files = files;
      fileInput.dispatchEvent(new Event('change'));
    }
  }
});
</script>