require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Make code changes take effect immediately without server restart.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable Action Controller caching for development to test caching functionality
  config.action_controller.perform_caching = true
  config.public_file_server.headers = { "cache-control" => "public, max-age=#{2.days.to_i}" }

  # Use file store for development to test caching functionality
  config.cache_store = :file_store, Rails.root.join("tmp", "cache")

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Make template changes take effect immediately.
  config.action_mailer.perform_caching = false

  # Set localhost to be used by links generated in mailer templates.
  config.action_mailer.default_url_options = { host: "localhost", port: 3000 }

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Append comments with runtime information tags to SQL queries in logs.
  config.active_record.query_log_tags_enabled = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Devise configuration
  config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

  # Mailer configuration for development
  # Use :file delivery method to save emails as files in tmp/mails/
  config.action_mailer.delivery_method = :file
  config.action_mailer.file_settings = { location: Rails.root.join('tmp', 'mails') }
  config.action_mailer.perform_deliveries = true

  # For production, you would configure real SMTP settings:
  # config.action_mailer.smtp_settings = {
  #   address: 'smtp.gmail.com',
  #   port: 587,
  #   domain: 'yourdomain.com',
  #   user_name: ENV['SMTP_USERNAME'],
  #   password: ENV['SMTP_PASSWORD'],
  #   authentication: 'plain',
  #   enable_starttls_auto: true
  # }

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!

  # Asset pipeline configuration for development
  # Enable/disable serving of images, stylesheets, and JavaScripts from an asset server.
  config.public_file_server.enabled = true

  # Asset pipeline settings
  config.assets.debug = true
  config.assets.compile = true
  config.assets.quiet = true

  # Compress CSS using a preprocessor.
  config.assets.css_compressor = nil

  # Do not compress JavaScripts using a preprocessor.
  config.assets.js_compressor = nil
end
